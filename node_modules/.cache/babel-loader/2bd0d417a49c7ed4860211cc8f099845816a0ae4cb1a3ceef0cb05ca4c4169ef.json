{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{Navigate,useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const userAuthContext=/*#__PURE__*/createContext();export function UserAuthContextProvider(_ref){let{children}=_ref;const[user,setUser]=useState({});const[error,setError]=useState('');const[message,setMessage]=useState('');const[isLoggedIn,setIsLoggedIn]=useState(false);const[isLoading,setIsLoading]=useState(false);const navigate=useNavigate();const login=async(email,password)=>{setIsLoading(true);try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/admin/login\"),{email,password});const data=response.data;localStorage.setItem('access',data.results.token);setUser(data.results.verifyAdmin);setIsLoggedIn(true);// navigate('/dashboard');\nconsole.log(data);console.log('API Response:',data.message);if(data.error){setMessage('Invalid Email');}else{navigate('/dashboard');}}catch(error){console.error('Error during API request:',error);// Handle other errors, e.g., show a general error message to the user\n}finally{setIsLoading(false);}};const logout=()=>{localStorage.removeItem('access');setUser({});setIsLoggedIn(false);navigate('/');// or navigate to the homepage\n};const forgotPassword=async email=>{setIsLoading(true);try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/admin/forgetPassword\"),{email});const data=response.data;console.log('Password reset email sent successfully:',data);localStorage.setItem(\"useremail\",email);if(data.error){setMessage('Email Not Found');}else{navigate('/verification');}}catch(error){console.error('Error during API request:',error);}finally{setIsLoading(false);}};const verification=async(email,otp)=>{setIsLoading(true);try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/admin/verifyOtp\"),{email,otp});const data=response.data;console.log(data.message);if(data.error){alert(\"Invalid OTP\");}else{console.log(\"OTP Verified Successfully\");navigate('/reset-password');}}catch(error){console.error(\"Error during verification:\",error.message);}finally{setIsLoading(false);}};const reset_password=async(email,password)=>{setIsLoading(true);try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/admin/updatePassword\"),{email,password});const data=response.data;console.log('API Response:',data.message);if(data.error){setError(error);alert(error);}else{navigate('/');}}catch(error){console.error('Error during API request:',error);// Handle other errors, e.g., show a general error message to the user\n}finally{setIsLoading(false);}};const change_password=async(email,oldPassword,newPassword)=>{setIsLoading(true);try{const authToken=localStorage.getItem('access');if(!authToken){throw new Error('Authentication token not found');}const headers={'x-auth-token-admin':authToken,'Content-Type':'application/json'};const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/admin/changePassword\"),{email,oldPassword,newPassword},{headers});const data=response.data;console.log('API Response:',data.message);if(data.error){setError(data.error);// Set the error from the API response\nalert(data.error);// Show the error to the user\n}else{navigate('/');}}catch(error){console.error('Error during API request:',error);// Handle other errors, e.g., show a general error message to the user\n}finally{setIsLoading(false);}};const request_again=async email=>{setIsLoading(true);try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/admin/forgetPassword\"),{email});const data=response.data;console.log('Password reset email sent successfully:',data);if(data.error){setMessage('Email Not Found');}else{navigate('/verification');}}catch(error){console.error('Error during API request:',error);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(userAuthContext.Provider,{value:{login,logout,forgotPassword,verification,reset_password,change_password,request_again,message,user,error,isLoggedIn,isLoading},children:children});}export function useUserAuth(){return useContext(userAuthContext);}","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","Navigate","useNavigate","jsx","_jsx","userAuthContext","UserAuthContextProvider","_ref","children","user","setUser","error","setError","message","setMessage","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","navigate","login","email","password","response","post","concat","process","env","REACT_APP_API_URL","data","localStorage","setItem","results","token","verifyAdmin","console","log","logout","removeItem","forgotPassword","verification","otp","alert","reset_password","change_password","oldPassword","newPassword","authToken","getItem","Error","headers","request_again","Provider","value","useUserAuth"],"sources":["D:/Tech Gropes/ihearu/src/Components/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const login = async (email, password) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/admin/login`, { email, password });\r\n\r\n            const data = response.data;\r\n            localStorage.setItem('access', data.results.token);\r\n            setUser(data.results.verifyAdmin);\r\n            setIsLoggedIn(true);\r\n            // navigate('/dashboard');\r\n            console.log(data)\r\n            console.log('API Response:', data.message);\r\n            if (data.error) {\r\n                setMessage('Invalid Email')\r\n\r\n            }\r\n            else {\r\n                navigate('/dashboard')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during API request:', error);\r\n            // Handle other errors, e.g., show a general error message to the user\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('access');\r\n        setUser({});\r\n        setIsLoggedIn(false);\r\n        navigate('/'); // or navigate to the homepage\r\n    };\r\n\r\n    const forgotPassword = async (email) => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/admin/forgetPassword`, { email });\r\n            const data = response.data;\r\n            console.log('Password reset email sent successfully:', data);\r\n            localStorage.setItem(\"useremail\", email);\r\n            if (data.error) {\r\n                setMessage('Email Not Found')\r\n            }\r\n            else {\r\n                navigate('/verification')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during API request:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    const verification = async (email, otp) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/admin/verifyOtp`, { email, otp });\r\n            const data = response.data;\r\n            console.log(data.message);\r\n\r\n            if (data.error) {\r\n                alert(\"Invalid OTP\");\r\n            } else {\r\n                console.log(\"OTP Verified Successfully\");\r\n                navigate('/reset-password');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error during verification:\", error.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    const reset_password = async (email, password) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/admin/updatePassword`, { email, password });\r\n\r\n            const data = response.data;\r\n            console.log('API Response:', data.message);\r\n            if (data.error) {\r\n                setError(error)\r\n                alert(error)\r\n            }\r\n            else {\r\n                navigate('/')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during API request:', error);\r\n            // Handle other errors, e.g., show a general error message to the user\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    const change_password = async (email, oldPassword, newPassword) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const authToken = localStorage.getItem('access');\r\n            if (!authToken) {\r\n                throw new Error('Authentication token not found');\r\n            }\r\n\r\n            const headers = {\r\n                'x-auth-token-admin': authToken,\r\n                'Content-Type': 'application/json',\r\n            };\r\n\r\n            const response = await axios.post(\r\n                `${process.env.REACT_APP_API_URL}/api/admin/changePassword`,\r\n                { email, oldPassword, newPassword },\r\n                { headers }\r\n            );\r\n\r\n            const data = response.data;\r\n            console.log('API Response:', data.message);\r\n            if (data.error) {\r\n                setError(data.error); // Set the error from the API response\r\n                alert(data.error); // Show the error to the user\r\n            } else {\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during API request:', error);\r\n            // Handle other errors, e.g., show a general error message to the user\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    const request_again = async (email) => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/admin/forgetPassword`, { email });\r\n            const data = response.data;\r\n            console.log('Password reset email sent successfully:', data);\r\n            if (data.error) {\r\n                setMessage('Email Not Found')\r\n            }\r\n            else {\r\n                navigate('/verification')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during API request:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <userAuthContext.Provider value={{ login, logout, forgotPassword, verification, reset_password, change_password, request_again,message, user, error, isLoggedIn, isLoading }}>\r\n            {children}\r\n        </userAuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useUserAuth() {\r\n    return useContext(userAuthContext);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}