{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tech Gropes\\\\ihearu\\\\src\\\\Components\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userAuthContext = /*#__PURE__*/createContext();\nexport function UserAuthContextProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      // localStorage.setItem('access', data.results.token);\n      setUser(data.results.verifyAdmin);\n      setIsLoggedIn(true);\n      navigate('/dashboard');\n      console.log('API Response:', data);\n    } catch (error) {\n      console.error('Error during API request:', error);\n      // Handle error, e.g., show an error message to the user\n    }\n  };\n  const forgotPassword = () => {\n    // Implement the logic for forgot password if needed\n  };\n  return /*#__PURE__*/_jsxDEV(userAuthContext.Provider, {\n    value: {\n      login,\n      forgotPassword,\n      user,\n      isLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(UserAuthContextProvider, \"4qxnE5Cd8cdXN/CR5Gi71VONyzg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserAuthContextProvider;\nexport function useUserAuth() {\n  _s2();\n  return useContext(userAuthContext);\n}\n_s2(useUserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserAuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","Navigate","useNavigate","jsxDEV","_jsxDEV","userAuthContext","UserAuthContextProvider","children","_s","user","setUser","isLoggedIn","setIsLoggedIn","navigate","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","results","verifyAdmin","console","log","error","forgotPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserAuth","_s2","$RefreshReg$"],"sources":["D:/Tech Gropes/ihearu/src/Components/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n    const [user, setUser] = useState({});\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate()\r\n    const login = async (email, password) => {\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            // localStorage.setItem('access', data.results.token);\r\n            setUser(data.results.verifyAdmin);\r\n            setIsLoggedIn(true);\r\n            navigate('/dashboard');\r\n            console.log('API Response:', data);\r\n        } catch (error) {\r\n            console.error('Error during API request:', error);\r\n            // Handle error, e.g., show an error message to the user\r\n        }\r\n    };\r\n    const forgotPassword = () => {\r\n        // Implement the logic for forgot password if needed\r\n    };\r\n\r\n    return (\r\n        <userAuthContext.Provider value={{ login, forgotPassword, user, isLoggedIn }}>\r\n            {children}\r\n        </userAuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useUserAuth() {\r\n    return useContext(userAuthContext);\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASQ,uBAAuBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAiB,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX,KAAK;UAAEC;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC;MACAlB,OAAO,CAACiB,IAAI,CAACE,OAAO,CAACC,WAAW,CAAC;MACjClB,aAAa,CAAC,IAAI,CAAC;MACnBC,QAAQ,CAAC,YAAY,CAAC;MACtBkB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,IAAI,CAAC;IACtC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;IACJ;EACJ,CAAC;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB;EAAA,CACH;EAED,oBACI9B,OAAA,CAACC,eAAe,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAAEoB,cAAc;MAAEzB,IAAI;MAAEE;IAAW,CAAE;IAAAJ,QAAA,EACxEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC;AAAChC,EAAA,CAlCeF,uBAAuB;EAAA,QAGlBJ,WAAW;AAAA;AAAAuC,EAAA,GAHhBnC,uBAAuB;AAoCvC,OAAO,SAASoC,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC1B,OAAO5C,UAAU,CAACM,eAAe,CAAC;AACtC;AAACsC,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}