{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tech Gropes\\\\ihearu\\\\src\\\\Components\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userAuthContext = /*#__PURE__*/createContext();\nexport function UserAuthContextProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState({});\n  const [authtoken, setauthtoken] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      setUser(data.user);\n      setauthtoken(data.results.token);\n      setIsLoggedIn(true);\n      console.log('API Response:', data);\n    } catch (error) {\n      console.error('Error during API request:', error);\n    }\n  };\n  const forgotPassword = () => {\n    // Implement the logic for forgot password if needed\n  };\n  return /*#__PURE__*/_jsxDEV(userAuthContext.Provider, {\n    value: {\n      login,\n      forgotPassword,\n      user,\n      setauthtoken,\n      authtoken,\n      isLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAuthContextProvider, \"6ZHGH2D4K8ImESrFEFm7OENIwrU=\");\n_c = UserAuthContextProvider;\nexport function useUserAuth() {\n  _s2();\n  return useContext(userAuthContext);\n}\n_s2(useUserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserAuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","userAuthContext","UserAuthContextProvider","children","_s","user","setUser","authtoken","setauthtoken","isLoggedIn","setIsLoggedIn","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","results","token","console","log","error","forgotPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserAuth","_s2","$RefreshReg$"],"sources":["D:/Tech Gropes/ihearu/src/Components/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const [authtoken, setauthtoken] = useState('')\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setUser(data.user);\r\n      setauthtoken(data.results.token)\r\n      setIsLoggedIn(true);\r\n\r\n      console.log('API Response:', data);\r\n    } catch (error) {\r\n      console.error('Error during API request:', error);\r\n    }\r\n  };\r\n\r\n  const forgotPassword = () => {\r\n    // Implement the logic for forgot password if needed\r\n  };\r\n\r\n  return (\r\n    <userAuthContext.Provider value={{ login, forgotPassword, user, setauthtoken,authtoken,isLoggedIn }}>\r\n      {children}\r\n    </userAuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useUserAuth() {\r\n  return useContext(userAuthContext);\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASM,uBAAuBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAiB,EAAE;QAC/EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCnB,OAAO,CAACkB,IAAI,CAACnB,IAAI,CAAC;MAClBG,YAAY,CAACgB,IAAI,CAACE,OAAO,CAACC,KAAK,CAAC;MAChCjB,aAAa,CAAC,IAAI,CAAC;MAEnBkB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;EAAA,CACD;EAED,oBACE/B,OAAA,CAACC,eAAe,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAAEoB,cAAc;MAAE1B,IAAI;MAAEG,YAAY;MAACD,SAAS;MAACE;IAAW,CAAE;IAAAN,QAAA,EACjGA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAACjC,EAAA,CAnCeF,uBAAuB;AAAAoC,EAAA,GAAvBpC,uBAAuB;AAqCvC,OAAO,SAASqC,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,OAAO3C,UAAU,CAACI,eAAe,CAAC;AACpC;AAACuC,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}