{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tech Gropes\\\\ihearu\\\\src\\\\Components\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userAuthContext = /*#__PURE__*/createContext();\nexport function UserAuthContextProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState({});\n  const [authtoken, setauthtoken] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate('');\n  const login = async e => {\n    e.preventDefault();\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'email': e.target.email.value,\n        'password': e.target.password.value\n      })\n    });\n    const data = await response.json();\n    if (response.status == 200) {\n      setauthtoken(data);\n      setuser(jwtDecode(data.access));\n      // console.log(jwtDecode(data.access))\n      localStorage.setItem('access', data.access);\n      navigate('/dashboard');\n    } else {\n      alert('Something Went Wrong');\n    }\n  };\n  const forgotPassword = () => {\n    // Implement the logic for forgot password if needed\n  };\n  return /*#__PURE__*/_jsxDEV(userAuthContext.Provider, {\n    value: {\n      login,\n      forgotPassword,\n      user,\n      setauthtoken,\n      authtoken,\n      isLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(UserAuthContextProvider, \"x18uKo387McQ8a6zGtuRetDfSGs=\", false, function () {\n  return [useNavigate];\n});\n_c = UserAuthContextProvider;\nexport function useUserAuth() {\n  _s2();\n  return useContext(userAuthContext);\n}\n_s2(useUserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserAuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useNavigate","jsxDEV","_jsxDEV","userAuthContext","UserAuthContextProvider","children","_s","user","setUser","authtoken","setauthtoken","isLoggedIn","setIsLoggedIn","navigate","login","e","preventDefault","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","target","email","value","password","data","json","status","setuser","jwtDecode","access","localStorage","setItem","alert","forgotPassword","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserAuth","_s2","$RefreshReg$"],"sources":["D:/Tech Gropes/ihearu/src/Components/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n    const [user, setUser] = useState({});\r\n    const [authtoken, setauthtoken] = useState('')\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate('')\r\n    const login = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ 'email': e.target.email.value, 'password': e.target.password.value })\r\n        })\r\n        const data = await response.json();\r\n        if (response.status == 200) {\r\n            setauthtoken(data)\r\n            setuser(jwtDecode(data.access))\r\n            // console.log(jwtDecode(data.access))\r\n            localStorage.setItem('access', data.access);\r\n            navigate('/dashboard')\r\n        } else {\r\n            alert('Something Went Wrong');\r\n        }\r\n    }\r\n    const forgotPassword = () => {\r\n        // Implement the logic for forgot password if needed\r\n    };\r\n\r\n    return (\r\n        <userAuthContext.Provider value={{ login, forgotPassword, user, setauthtoken, authtoken, isLoggedIn }}>\r\n            {children}\r\n        </userAuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useUserAuth() {\r\n    return useContext(userAuthContext);\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASO,uBAAuBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMc,QAAQ,GAAGb,WAAW,CAAC,EAAE,CAAC;EAChC,MAAMc,KAAK,GAAG,MAAOC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAiB,EAAE;MAC7EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,OAAO,EAAEX,CAAC,CAACY,MAAM,CAACC,KAAK,CAACC,KAAK;QAAE,UAAU,EAAEd,CAAC,CAACY,MAAM,CAACG,QAAQ,CAACD;MAAM,CAAC;IAC/F,CAAC,CAAC;IACF,MAAME,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IAClC,IAAIf,QAAQ,CAACgB,MAAM,IAAI,GAAG,EAAE;MACxBvB,YAAY,CAACqB,IAAI,CAAC;MAClBG,OAAO,CAACC,SAAS,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC;MAC/B;MACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEP,IAAI,CAACK,MAAM,CAAC;MAC3CvB,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,MAAM;MACH0B,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB;EAAA,CACH;EAED,oBACItC,OAAA,CAACC,eAAe,CAACsC,QAAQ;IAACZ,KAAK,EAAE;MAAEf,KAAK;MAAE0B,cAAc;MAAEjC,IAAI;MAAEG,YAAY;MAAED,SAAS;MAAEE;IAAW,CAAE;IAAAN,QAAA,EACjGA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC;AAACvC,EAAA,CAlCeF,uBAAuB;EAAA,QAIlBJ,WAAW;AAAA;AAAA8C,EAAA,GAJhB1C,uBAAuB;AAoCvC,OAAO,SAAS2C,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC1B,OAAOlD,UAAU,CAACK,eAAe,CAAC;AACtC;AAAC6C,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}