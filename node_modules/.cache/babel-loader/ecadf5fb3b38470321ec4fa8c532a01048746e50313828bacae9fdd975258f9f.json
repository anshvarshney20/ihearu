{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tech Gropes\\\\ihearu\\\\src\\\\Components\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userAuthContext = /*#__PURE__*/createContext();\nexport function UserAuthContextProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState({});\n  const [authtoken, setauthtoken] = useState(() => localStorage.getItem('token') ? JSON.parse(localStorage.getItem('authtoken')) : null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n\n      // Assuming your login API returns user data upon successful login\n      setUser(data.user);\n      setIsLoggedIn(true);\n      console.log('API Response:', data);\n    } catch (error) {\n      console.error('Error during API request:', error);\n    }\n  };\n  const forgotPassword = () => {\n    // Implement the logic for forgot password if needed\n  };\n  return /*#__PURE__*/_jsxDEV(userAuthContext.Provider, {\n    value: {\n      login,\n      forgotPassword,\n      user,\n      isLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAuthContextProvider, \"CQqrKyOUPVADPxvk7tVxK7ygRm8=\");\n_c = UserAuthContextProvider;\nexport function useUserAuth() {\n  _s2();\n  return useContext(userAuthContext);\n}\n_s2(useUserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserAuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","userAuthContext","UserAuthContextProvider","children","_s","user","setUser","authtoken","setauthtoken","localStorage","getItem","JSON","parse","isLoggedIn","setIsLoggedIn","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","stringify","data","json","console","log","error","forgotPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserAuth","_s2","$RefreshReg$"],"sources":["D:/Tech Gropes/ihearu/src/Components/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const [authtoken, setauthtoken] = useState(() => localStorage.getItem('token') ? JSON.parse(localStorage.getItem('authtoken')) : null)\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/admin/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Assuming your login API returns user data upon successful login\r\n      setUser(data.user);\r\n      setIsLoggedIn(true);\r\n\r\n      console.log('API Response:', data);\r\n    } catch (error) {\r\n      console.error('Error during API request:', error);\r\n    }\r\n  };\r\n\r\n  const forgotPassword = () => {\r\n    // Implement the logic for forgot password if needed\r\n  };\r\n\r\n  return (\r\n    <userAuthContext.Provider value={{ login, forgotPassword, user, isLoggedIn }}>\r\n      {children}\r\n    </userAuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useUserAuth() {\r\n  return useContext(userAuthContext);\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASM,uBAAuBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,MAAMW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;EACtI,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMiB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAiB,EAAE;QAC/EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEd,IAAI,CAACe,SAAS,CAAC;UAAEV,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;;MAElC;MACAtB,OAAO,CAACqB,IAAI,CAACtB,IAAI,CAAC;MAClBS,aAAa,CAAC,IAAI,CAAC;MAEnBe,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;EAAA,CACD;EAED,oBACEhC,OAAA,CAACC,eAAe,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAEnB,KAAK;MAAEiB,cAAc;MAAE3B,IAAI;MAAEQ;IAAW,CAAE;IAAAV,QAAA,EAC1EA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAAClC,EAAA,CApCeF,uBAAuB;AAAAqC,EAAA,GAAvBrC,uBAAuB;AAsCvC,OAAO,SAASsC,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,OAAO5C,UAAU,CAACI,eAAe,CAAC;AACpC;AAACwC,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}