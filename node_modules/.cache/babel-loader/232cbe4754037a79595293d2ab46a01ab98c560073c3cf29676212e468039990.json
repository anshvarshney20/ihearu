{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tech Gropes\\\\ihearu\\\\src\\\\Components\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport default UserContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // const [authtoken, setauthtoken] = useState(() => localStorage.getItem('authtoken') ? JSON.parse(localStorage.getItem('authtoken')) : null)\n  // const [user, setuser] = useState(() => localStorage.getItem('authtoken') ? jwtDecode(localStorage.getItem('authtoken')) : null)\n  const [isActivated, setIsActivated] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const logout = () => {\n    setauthtoken(null);\n    setuser(null);\n    localStorage.removeItem('access');\n    navigate('/login');\n  };\n  const signup = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/auth/users/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': e.target.name.value,\n        'email': e.target.email.value,\n        'password': e.target.password.value,\n        're_password': e.target.re_password.value\n      })\n    });\n    console.log('Ok');\n    const data = await response.json();\n    console.log(data);\n  };\n  const login = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'email': e.target.email.value,\n        'password': e.target.password.value\n      })\n    });\n    const data = await response.json();\n    if (response.status == 200) {\n      setauthtoken(data);\n      setuser(jwtDecode(data.access));\n      // console.log(jwtDecode(data.access))\n      localStorage.setItem('access', data.access);\n      navigate('/dashboard');\n    } else {\n      alert('Something Went Wrong');\n    }\n  };\n  const reset_password = async email => {\n    const apiUrl = process.env.REACT_APP_API_URL;\n    console.log('API URL:', apiUrl);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      email\n    });\n    console.log('Request Body:', body);\n    try {\n      const response = await axios.post('http://localhost:8000/auth/users/reset_password/', body, config);\n      console.log('Response:', response);\n      if (response.status === 204) {\n        console.log('Password reset request sent.');\n        navigate('/login');\n      } else {\n        console.error('Password reset request failed. Server returned status:', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred during password reset:', error);\n    }\n  };\n  const reset_password_confirm = async (uid, token, new_password) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      uid,\n      token,\n      new_password\n    });\n    console.log('Request Payload:', body);\n    try {\n      const response = await axios.post('http://localhost:8000/auth/users/reset_password_confirm/', body, config);\n      console.log('Password reset confirmed successfully:', response.data);\n      if (response) {\n        Navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const verify = async (uid, token) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      uid,\n      token\n    });\n    try {\n      await axios.post('http://localhost:8000/auth/users/activation/', body, config);\n      setIsActivated(true);\n      setError(null);\n    } catch (err) {\n      setIsActivated(false);\n      setError(err);\n    }\n  };\n  const contextData = {\n    signup: signup,\n    isActivated,\n    error,\n    reset_password: reset_password,\n    login: login,\n    user: user,\n    logout: logout,\n    reset_password_confirm: reset_password_confirm,\n    verify: verify\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"MzJxfjY5Q3rbjpgah5MJ5/60y00=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","Navigate","useNavigate","jwtDecode","jsxDEV","_jsxDEV","UserContext","AuthProvider","children","_s","isActivated","setIsActivated","error","setError","navigate","logout","setauthtoken","setuser","localStorage","removeItem","signup","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","target","name","value","email","password","re_password","console","log","data","json","login","status","access","setItem","alert","reset_password","apiUrl","process","env","REACT_APP_API_URL","config","post","reset_password_confirm","uid","token","new_password","verify","err","contextData","user","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tech Gropes/ihearu/src/Components/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    // const [authtoken, setauthtoken] = useState(() => localStorage.getItem('authtoken') ? JSON.parse(localStorage.getItem('authtoken')) : null)\r\n    // const [user, setuser] = useState(() => localStorage.getItem('authtoken') ? jwtDecode(localStorage.getItem('authtoken')) : null)\r\n    const [isActivated, setIsActivated] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate()\r\n    const logout = () => {\r\n        setauthtoken(null)\r\n        setuser(null)\r\n        localStorage.removeItem('access')\r\n        navigate('/login')\r\n    }\r\n    const signup = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const response = await fetch('http://localhost:8000/auth/users/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ 'name': e.target.name.value, 'email': e.target.email.value, 'password': e.target.password.value, 're_password': e.target.re_password.value })\r\n        })\r\n        console.log('Ok')\r\n        const data = await response.json()\r\n        console.log(data)\r\n    }\r\n\r\n    const login = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch('http://localhost:8000/api/token', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ 'email': e.target.email.value, 'password': e.target.password.value })\r\n        })\r\n        const data = await response.json();\r\n        if (response.status == 200) {\r\n            setauthtoken(data)\r\n            setuser(jwtDecode(data.access))\r\n            // console.log(jwtDecode(data.access))\r\n            localStorage.setItem('access', data.access);\r\n            navigate('/dashboard')\r\n        } else {\r\n            alert('Something Went Wrong');\r\n        }\r\n    }\r\n    const reset_password = async (email) => {\r\n        const apiUrl = process.env.REACT_APP_API_URL;\r\n        console.log('API URL:', apiUrl);\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const body = JSON.stringify({ email });\r\n        console.log('Request Body:', body);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/auth/users/reset_password/', body, config);\r\n            console.log('Response:', response);\r\n            if (response.status === 204) {\r\n                console.log('Password reset request sent.');\r\n                navigate('/login');\r\n            } else {\r\n                console.error('Password reset request failed. Server returned status:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during password reset:', error);\r\n        }\r\n\r\n    }\r\n\r\n    const reset_password_confirm = async (uid, token, new_password) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ uid, token, new_password });\r\n        console.log('Request Payload:', body);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/auth/users/reset_password_confirm/', body, config);\r\n            console.log('Password reset confirmed successfully:', response.data);\r\n            if (response) {\r\n                Navigate('/login')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const verify = async (uid, token) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const body = JSON.stringify({ uid, token });\r\n\r\n        try {\r\n            await axios.post('http://localhost:8000/auth/users/activation/', body, config);\r\n            setIsActivated(true);\r\n            setError(null);\r\n        } catch (err) {\r\n            setIsActivated(false);\r\n            setError(err);\r\n        }\r\n    };\r\n    const contextData = {\r\n        signup: signup,\r\n        isActivated,\r\n        error,\r\n        reset_password: reset_password,\r\n        login: login,\r\n        user: user,\r\n        logout: logout,\r\n        reset_password_confirm: reset_password_confirm,\r\n        verify:verify,\r\n    }\r\n    return (\r\n        <UserContext.Provider value={contextData}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,eAAeQ,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACjBC,YAAY,CAAC,IAAI,CAAC;IAClBC,OAAO,CAAC,IAAI,CAAC;IACbC,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;IACjCL,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EACD,MAAMM,MAAM,GAAG,MAAOC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,MAAM,EAAER,CAAC,CAACS,MAAM,CAACC,IAAI,CAACC,KAAK;QAAE,OAAO,EAAEX,CAAC,CAACS,MAAM,CAACG,KAAK,CAACD,KAAK;QAAE,UAAU,EAAEX,CAAC,CAACS,MAAM,CAACI,QAAQ,CAACF,KAAK;QAAE,aAAa,EAAEX,CAAC,CAACS,MAAM,CAACK,WAAW,CAACH;MAAM,CAAC;IACvK,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,MAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;IAClCH,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,KAAK,GAAG,MAAOnB,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,OAAO,EAAER,CAAC,CAACS,MAAM,CAACG,KAAK,CAACD,KAAK;QAAE,UAAU,EAAEX,CAAC,CAACS,MAAM,CAACI,QAAQ,CAACF;MAAM,CAAC;IAC/F,CAAC,CAAC;IACF,MAAMM,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;IAClC,IAAIhB,QAAQ,CAACkB,MAAM,IAAI,GAAG,EAAE;MACxBzB,YAAY,CAACsB,IAAI,CAAC;MAClBrB,OAAO,CAACd,SAAS,CAACmC,IAAI,CAACI,MAAM,CAAC,CAAC;MAC/B;MACAxB,YAAY,CAACyB,OAAO,CAAC,QAAQ,EAAEL,IAAI,CAACI,MAAM,CAAC;MAC3C5B,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,MAAM;MACH8B,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EACD,MAAMC,cAAc,GAAG,MAAOZ,KAAK,IAAK;IACpC,MAAMa,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;IAC5Cb,OAAO,CAACC,GAAG,CAAC,UAAU,EAAES,MAAM,CAAC;IAE/B,MAAMI,MAAM,GAAG;MACXxB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEI;IAAM,CAAC,CAAC;IACtCG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEV,IAAI,CAAC;IAElC,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMvB,KAAK,CAACmD,IAAI,CAAC,kDAAkD,EAAExB,IAAI,EAAEuB,MAAM,CAAC;MACnGd,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEd,QAAQ,CAAC;MAClC,IAAIA,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;QACzBL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3CvB,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MAAM;QACHsB,OAAO,CAACxB,KAAK,CAAC,wDAAwD,EAAEW,QAAQ,CAACkB,MAAM,CAAC;MAC5F;IACJ,CAAC,CAAC,OAAO7B,KAAK,EAAE;MACZwB,OAAO,CAACxB,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IACpE;EAEJ,CAAC;EAED,MAAMwC,sBAAsB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,KAAK,EAAEC,YAAY,KAAK;IAC/D,MAAML,MAAM,GAAG;MACXxB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEwB,GAAG;MAAEC,KAAK;MAAEC;IAAa,CAAC,CAAC;IACzDnB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEV,IAAI,CAAC;IAErC,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMvB,KAAK,CAACmD,IAAI,CAAC,0DAA0D,EAAExB,IAAI,EAAEuB,MAAM,CAAC;MAC3Gd,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEd,QAAQ,CAACe,IAAI,CAAC;MACpE,IAAIf,QAAQ,EAAE;QACVtB,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZwB,OAAO,CAACC,GAAG,CAACzB,KAAK,CAAC;IACtB;EACJ,CAAC;EACD,MAAM4C,MAAM,GAAG,MAAAA,CAAOH,GAAG,EAAEC,KAAK,KAAK;IACjC,MAAMJ,MAAM,GAAG;MACXxB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEwB,GAAG;MAAEC;IAAM,CAAC,CAAC;IAE3C,IAAI;MACA,MAAMtD,KAAK,CAACmD,IAAI,CAAC,8CAA8C,EAAExB,IAAI,EAAEuB,MAAM,CAAC;MAC9EvC,cAAc,CAAC,IAAI,CAAC;MACpBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAO4C,GAAG,EAAE;MACV9C,cAAc,CAAC,KAAK,CAAC;MACrBE,QAAQ,CAAC4C,GAAG,CAAC;IACjB;EACJ,CAAC;EACD,MAAMC,WAAW,GAAG;IAChBtC,MAAM,EAAEA,MAAM;IACdV,WAAW;IACXE,KAAK;IACLiC,cAAc,EAAEA,cAAc;IAC9BL,KAAK,EAAEA,KAAK;IACZmB,IAAI,EAAEA,IAAI;IACV5C,MAAM,EAAEA,MAAM;IACdqC,sBAAsB,EAAEA,sBAAsB;IAC9CI,MAAM,EAACA;EACX,CAAC;EACD,oBACInD,OAAA,CAACC,WAAW,CAACsD,QAAQ;IAAC5B,KAAK,EAAE0B,WAAY;IAAAlD,QAAA,EACpCA;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAvD,EAAA,CAjIYF,YAAY;EAAA,QAKJL,WAAW;AAAA;AAAA+D,EAAA,GALnB1D,YAAY;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}